## Rename files in directory matching $PATTERN with $REPLACEMENT
ag -l | rename -s $PATTERN $REPLACEMENT

## Rename files in directory matching $PATTERN with $REPLACEMENT, with a dry run.
ag -l | rename -n -s $PATTERN $REPLACEMENT

## Rename the name of a Component in React along with corresponding CSS classes from
## $OLD_CLASS to $NEW_CLASS
codemod -d assets/javascripts/ --extensions ts,tsx,js,jsx,scss,styl 'NewCompanyCard' 'NcnCard'
codemod -d assets/javascripts/ --extensions ts,tsx,js,jsx,scss,styl 'new-company-card' 'ncn-card'
ag -l | rename -n -s new-company-card ncn-card
ag -l | rename -s new-company-card ncn-card

## Kill process bound on a particular port.
fuser -k $PORT/tcp

## Search and replace within a file, modifying it in place.
## (Could use codemod, but this is useful in a script)
sed -i '' 's/oldword/newword/' file1.txt

# In a SQL query, get only the numbers that match a column filter.
#
# Example Query:
#
# SELECT *
# FROM "local_person_values"
# WHERE ((("org_id" = 4223)
#         AND ("entity_attribute_id" = 2317495)
#         AND ("person_id" = 115254401))
#        OR (("org_id" = 4223)
#            AND ("entity_attribute_id" = 2317496)
#            AND ("person_id" = 115254401)))
#
# This would output
# 
# 2317495
# 2317496
# 
# Put this into regex101.com to see an explanation, basically, we match an exact string, and then
# use a capturing group to get the ID, and then use \K to ignore the previous stuff.
ag -o '"entity_attribute_id" = \K(\d+)' long-gfv-query.sql

# Search for Model.create use cases - key is the negative lookahead (?! ...phrase to exclude... )
ag '(LocalCompanyValue|...other model names...|CleanLocalOppValueChange)\.create(?!_with_private_model)'

# Search for FactoryBot .create use cases of a certain model, includes \s+ to account for a new line
# between create and the factory name.
ag 'create\(\s+:local_company_value'

# Using xargs to run rubocop/yarn on staged files
git diff --name-only | xargs yarn prettier-write
git diff --name-only | xargs rubocop -A

# Using xargs to run tests that have changes.
# Note '-L 1' forces xargs to run the command once per input line (as opposed to joining the input
line as the above commands do).
git diff --name-only | grep _test | xargs -L 1 bundle exec ruby
